@page "/"
@using BlazorApp.Data
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory
@inject HttpClient Http
@inject NavigationManager Navigation

<div>
    <h1>Todo Items</h1>
    <div class="button-controls">
        @if (todos != null)
        {
            <button @onclick='() => ViewCompleted()'>View Completed Items</button>
        }
        <button @onclick='() => Navigation.NavigateTo("/post")'>Create New Todo</button>
    </div>
</div>

@if (todos is null)
{
    <p>Unable to get todo items from API. Please try again later.</p>
}
else
{
    <ul class="todo-list">
        @foreach (var todo in todos)
        {
            <li 
                class="todo-item"
             >
                <div class="todo-item-inner">
                    <div @onclick='() => Navigation.NavigateTo("/todo/"+ todo.Id)'>@todo.Name</div>
                    <button @onclick='() => CompleteTodo(todo)'>Complete</button>
                </div>
                
            </li>
        }
    </ul>
}

@code {
    public TodoItem[] todos = Array.Empty<TodoItem>();

    protected override async Task OnInitializedAsync()
    {
        todos = await Http.GetFromJsonAsync<TodoItem[]>("https://localhost:7197/api/TodoItems/uncompleted");

    }

    private void ViewCompleted()
    {
        Navigation.NavigateTo("/completed");
    }

    private async void CompleteTodo(TodoItem item)
    {
        TodoItem newItem = item;
        newItem.IsComplete = true;
        await Http.PutAsJsonAsync<TodoItem>("https://localhost:7197/api/TodoItems/" + newItem.Id, newItem);
        // todos = Array.Empty<TodoItem>();
        // StateHasChanged();
        todos = await Http.GetFromJsonAsync<TodoItem[]>("https://localhost:7197/api/TodoItems/uncompleted");
        StateHasChanged();

    }
}
